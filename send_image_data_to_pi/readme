sample code for receiving data on Pi:

import sys
import socket
import pickle
import time
sys.path.append("..")
from ardSerial import *

model = 'Bittle'
postureTable = postureDict[model]



if __name__ == '__main__':
    try:
        goodPorts = {}
        connectPort(goodPorts)
        t=threading.Thread(target = keepCheckingPort, args = (goodPorts,))
        t.start()
        parallel = False
        send(goodPorts, ['kbalance',0.5])
        send(goodPorts, ['kwkF',0])

        server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        server_socket.bind(('192.168.1.168', 12346)) #raspberry pi IP address
        server_socket.listen()

        print("Waiting for a connection...")
        connection, client_address = server_socket.accept()

        try:
            print(f"Connection from {client_address}")

            while True and len(ports):
                time.sleep(0.001)
                data = connection.recv(1024)
                if data:
                    info = pickle.loads(data)
                    list_id = info['id']
                    list_data = info['data']
                    print(f"Received {list_id} {list_data}")
        except Exception as e:
            print(f"Error receiving data: {e}")

    except Exception as e:
        print("Closing connection")
        connection.close()
        server_socket.close()
        closeAllSerial(goodPorts)
        logger.info("finish!")
        os._exit(0)
        logger.info("Exception")
        closeAllSerial(goodPorts)
        os._exit(0)
        raise e

